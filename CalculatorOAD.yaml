openapi: "3.0.2"
info:
  title: Simple Test Calculator
  version: 1.0-pre_test
  description: A calculator supporting the 6 most common arithmetic operations -addition (+), subtraction(-), multiplication(*), division(/), division remainder or modulo(%) -
  contact:
    name: Dimitrios Lygizos
    email: lyzadmortem@gmail.com
servers:
  - url: http://localhost:8080/api
paths:
  /add:
    post:
      description: Perform add operation, add second_number to first_number and get the result
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputJson'
      responses:
        '200':
          description: Successful add operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulResponse'
        '400':
          $ref: '#/components/responses/badRequestError'

        default:
          $ref: '#/components/responses/genericError'
  /multiply:
    post:
      description: Perform multiply operation, multiply first_number by second_number and get the result.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputJson'
      responses:
        '200':
          description: Successful multiply operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulResponse'
        '400':
          $ref: '#/components/responses/badRequestError'

        default:
          $ref: '#/components/responses/genericError'

  /divide:
    post:
      description: Perform divide operation, divide first_number by second_number and retrieve the result.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputJson'
      responses:
        '200':
          description: Successful divide operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulResponse'
        '400':
          $ref: '#/components/responses/badRequestError'

        default:
          $ref: '#/components/responses/genericError'

  /subtract:
    post:
      description: subtract second_number from first_number and retrieve the result.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputJson'
      responses:
        '200':
          description: Successful subtract operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulResponse'
        '400':
          $ref: '#/components/responses/badRequestError'

        default:
          $ref: '#/components/responses/genericError'

  /modulo:
    post:
      description: get the remainder of first_number divided by second_number.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputJson'
      responses:
        '200':
          description: Successful modulo operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulResponse'
        '400':
          $ref: '#/components/responses/badRequestError'
        default:
          $ref: '#/components/responses/genericError'
components:
  schemas:
    inputNumberObject:
      type: number
      example: 3.2
    inputJson:
      type: object
      properties:
        first_number:
          $ref: '#/components/schemas/inputNumberObject'
        second_number:
          $ref: '#/components/schemas/inputNumberObject'
    successfulResponse:
      type: object
      required:
        - result
      properties:
        result:
          type: number
          example: 9.99
    error:
      type: object
      required:
        - status
        - httpCode
      properties:
        status:
          type: string
          example: "BAD_REQUEST"
        httpCode:
          type: number
          example: 400
        message:
          type: string
          example: "Malformed JSON request"
        debugMessage:
          type: string
          example: "JSON parse error"
    genError:
      type: object
      required:
        - status
        - httpCode
      properties:
        status:
          type: string
          example: "SERVER_ERROR"
        httpCode:
          type: number
          example: 500
        message:
          type: string
          example: "Unexpected error occurred"
  responses:
    badRequestError:
      description: Bad Request Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    genericError:
      description: Client or server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/genError'



